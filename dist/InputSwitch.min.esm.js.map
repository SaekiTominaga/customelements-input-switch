{"version":3,"sources":["InputSwitch.esm.js"],"names":["_myLocalStorage","_changeEventListener","_clickEventListener","_keydownEventListener","__classPrivateFieldSet","this","receiver","privateMap","value","has","TypeError","set","__classPrivateFieldGet","get","InputSwitch","HTMLElement","[object Object]","super","localStorage","e","console","info","cssString","shadow","attachShadow","mode","innerHTML","undefined","adoptedStyleSheets","cssStyleSheet","CSSStyleSheet","replaceSync","_changeEvent","bind","_clickEvent","_keydownEvent","formAssociated","observedAttributes","checked","disabled","storageKey","getItem","tabIndex","setAttribute","String","addEventListener","passive","removeEventListener","name","_oldValue","newValue","blur","getAttribute","localName","removeAttribute","setItem","ev","dispatchEvent","Event","preventDefault","key","WeakMap"],"mappings":"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","file":"InputSwitch.esm.js","sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, privateMap, value) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to set private field on non-instance\");\n    }\n    privateMap.set(receiver, value);\n    return value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, privateMap) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n};\nvar _myLocalStorage, _changeEventListener, _clickEventListener, _keydownEventListener;\n/**\n * <input type=\"switch\">\n *\n * @version 2.1.0\n */\nexport default class InputSwitch extends HTMLElement {\n    constructor() {\n        super();\n        _myLocalStorage.set(this, null);\n        _changeEventListener.set(this, void 0);\n        _clickEventListener.set(this, void 0);\n        _keydownEventListener.set(this, void 0);\n        try {\n            __classPrivateFieldSet(this, _myLocalStorage, localStorage);\n        }\n        catch (e) {\n            console.info('Storage access blocked.');\n        }\n        const cssString = `\n\t\t\t:host {\n\t\t\t\t--switch-width: 3.6em; /* 外枠の幅 */\n\t\t\t\t--switch-height: 1.8em; /* 外枠の高さ */\n\t\t\t\t--switch-padding: .2em; /* 外枠と球の間隔（マイナス値指定可能） */\n\t\t\t\t--switch-bgcolor-on: #29f; /* オンの時の背景色 */\n\t\t\t\t--switch-bgcolor-off: #ccc; /* オフの時の背景色 */\n\t\t\t\t--switch-bgcolor-disabled-on: #666; /* [disabled] オンの時の背景色 */\n\t\t\t\t--switch-bgcolor-disabled-off: #666; /* [disabled] オフの時の背景色 */\n\t\t\t\t--switch-ball-color: #fff; /* スライダーの球の色（background プロパティ） */\n\t\t\t\t--switch-animation-duration: .5s; /* アニメーションに掛かる時間（transition-duration プロパティ） */\n\t\t\t\t--switch-outline-mouse-focus: none; /* マウスフォーカス時のフォーカスインジゲーター（outline プロパティ） */\n\n\t\t\t\tposition: relative;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: var(--switch-width);\n\t\t\t\theight: var(--switch-height);\n\t\t\t}\n\n\t\t\t:host(:focus:not(:focus-visible)) {\n\t\t\t\toutline: var(--switch-outline-mouse-focus);\n\t\t\t}\n\n\t\t\t.slider {\n\t\t\t\t--switch-bgcolor: var(--switch-bgcolor-off);\n\n\t\t\t\tborder-radius: var(--switch-height);\n\t\t\t\tposition: absolute;\n\t\t\t\tinset: 0;\n\t\t\t\tbackground: var(--switch-bgcolor);\n\t\t\t\ttransition: background var(--switch-animation-duration);\n\t\t\t}\n\n\t\t\t@supports not (inset: 0) {\n\t\t\t\t.slider {\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tright: 0;\n\t\t\t\t\tbottom: 0;\n\t\t\t\t\tleft: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.slider::before {\n\t\t\t\t--switch-ball-diameter: calc(var(--switch-height) - var(--switch-padding) * 2);\n\t\t\t\t--switch-ball-transform: translateX(0);\n\n\t\t\t\tborder-radius: 50%;\n\t\t\t\tcontent: \"\";\n\t\t\t\twidth: var(--switch-ball-diameter);\n\t\t\t\theight: var(--switch-ball-diameter);\n\t\t\t\tposition: absolute;\n\t\t\t\tinset: var(--switch-padding);\n\t\t\t\tbackground: var(--switch-ball-color);\n\t\t\t\ttransform: var(--switch-ball-transform);\n\t\t\t\ttransition: transform var(--switch-animation-duration);\n\t\t\t}\n\n\t\t\t@supports not (inset: 0) {\n\t\t\t\t.slider::before {\n\t\t\t\t\ttop: var(--switch-padding);\n\t\t\t\t\tleft: var(--switch-padding);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t:host([checked]) .slider {\n\t\t\t\t--switch-bgcolor: var(--switch-bgcolor-on);\n\t\t\t}\n\n\t\t\t:host([checked]) .slider::before {\n\t\t\t\t--switch-ball-transform: translateX(calc(var(--switch-width) - var(--switch-height)));\n\t\t\t}\n\n\t\t\t:host([disabled]) .slider {\n\t\t\t\t--switch-bgcolor: var(--switch-bgcolor-disabled-off);\n\t\t\t}\n\t\t\t:host([disabled][checked]) .slider {\n\t\t\t\t--switch-bgcolor: var(--switch-bgcolor-disabled-on);\n\t\t\t}\n\t\t`;\n        const shadow = this.attachShadow({ mode: 'open' });\n        shadow.innerHTML = `\n\t\t\t<span class=\"slider\"></span>\n\t\t`;\n        if (shadow.adoptedStyleSheets !== undefined) {\n            const cssStyleSheet = new CSSStyleSheet();\n            cssStyleSheet.replaceSync(cssString);\n            shadow.adoptedStyleSheets = [cssStyleSheet];\n        }\n        else {\n            /* adoptedStyleSheets 未対応環境 */\n            shadow.innerHTML += `<style>${cssString}</style>`;\n        }\n        __classPrivateFieldSet(this, _changeEventListener, this._changeEvent.bind(this));\n        __classPrivateFieldSet(this, _clickEventListener, this._clickEvent.bind(this));\n        __classPrivateFieldSet(this, _keydownEventListener, this._keydownEvent.bind(this));\n    }\n    static get formAssociated() {\n        return true;\n    }\n    static get observedAttributes() {\n        return ['checked', 'disabled', 'storage-key'];\n    }\n    connectedCallback() {\n        const checked = this.checked;\n        const disabled = this.disabled;\n        if (__classPrivateFieldGet(this, _myLocalStorage) !== null) {\n            const storageKey = this.storageKey;\n            if (storageKey !== null && storageKey !== '') {\n                /* ストレージから前回アクセス時のチェック情報を取得する */\n                const storageValue = __classPrivateFieldGet(this, _myLocalStorage).getItem(storageKey);\n                switch (storageValue) {\n                    case 'true':\n                        if (!checked) {\n                            this.checked = true;\n                        }\n                        break;\n                    case 'false':\n                        if (checked) {\n                            this.checked = false;\n                        }\n                        break;\n                }\n            }\n        }\n        this.tabIndex = disabled ? -1 : 0;\n        this.setAttribute('role', 'switch');\n        this.setAttribute('aria-checked', String(checked));\n        this.setAttribute('aria-disabled', String(disabled));\n        if (!disabled) {\n            this.addEventListener('change', __classPrivateFieldGet(this, _changeEventListener), { passive: true });\n            this.addEventListener('click', __classPrivateFieldGet(this, _clickEventListener));\n            this.addEventListener('keydown', __classPrivateFieldGet(this, _keydownEventListener));\n        }\n    }\n    disconnectedCallback() {\n        this.removeEventListener('change', __classPrivateFieldGet(this, _changeEventListener));\n        this.removeEventListener('click', __classPrivateFieldGet(this, _clickEventListener));\n        this.removeEventListener('keydown', __classPrivateFieldGet(this, _keydownEventListener));\n    }\n    attributeChangedCallback(name, _oldValue, newValue) {\n        switch (name) {\n            case 'checked': {\n                const checked = newValue !== null;\n                this.setAttribute('aria-checked', String(checked));\n                break;\n            }\n            case 'disabled': {\n                const disabled = newValue !== null;\n                this.setAttribute('aria-disabled', String(disabled));\n                if (disabled) {\n                    this.tabIndex = -1;\n                    this.removeEventListener('change', __classPrivateFieldGet(this, _changeEventListener));\n                    this.removeEventListener('click', __classPrivateFieldGet(this, _clickEventListener));\n                    this.removeEventListener('keydown', __classPrivateFieldGet(this, _keydownEventListener));\n                    this.blur();\n                }\n                else {\n                    this.tabIndex = 0;\n                    this.addEventListener('change', __classPrivateFieldGet(this, _changeEventListener), { passive: true });\n                    this.addEventListener('click', __classPrivateFieldGet(this, _clickEventListener));\n                    this.addEventListener('keydown', __classPrivateFieldGet(this, _keydownEventListener));\n                }\n                break;\n            }\n            case 'storage-key': {\n                break;\n            }\n        }\n    }\n    get checked() {\n        return this.getAttribute('checked') !== null;\n    }\n    set checked(value) {\n        if (typeof value !== 'boolean') {\n            throw new TypeError(`Only a boolean value can be specified for the \\`checked\\` attribute of the <${this.localName}> element.`);\n        }\n        if (value) {\n            this.setAttribute('checked', '');\n        }\n        else {\n            this.removeAttribute('checked');\n        }\n    }\n    get disabled() {\n        return this.getAttribute('disabled') !== null;\n    }\n    set disabled(value) {\n        if (typeof value !== 'boolean') {\n            throw new TypeError(`Only a boolean value can be specified for the \\`disabled\\` attribute of the <${this.localName}> element.`);\n        }\n        if (value) {\n            this.setAttribute('disabled', '');\n        }\n        else {\n            this.removeAttribute('disabled');\n        }\n    }\n    get storageKey() {\n        return this.getAttribute('storage-key');\n    }\n    set storageKey(value) {\n        if (value === null) {\n            this.removeAttribute('storage-key');\n            return;\n        }\n        if (typeof value !== 'string') {\n            throw new TypeError(`Only a string value can be specified for the \\`storage-key\\` attribute of the <${this.localName}> element.`);\n        }\n        this.setAttribute('storage-key', value);\n    }\n    /**\n     * スイッチの状態を変更する\n     */\n    _changeEvent() {\n        const checked = this.checked;\n        this.checked = !checked;\n        if (__classPrivateFieldGet(this, _myLocalStorage) !== null) {\n            const storageKey = this.storageKey;\n            if (storageKey !== null && storageKey !== '') {\n                /* スイッチのチェック情報をストレージに保管する */\n                __classPrivateFieldGet(this, _myLocalStorage).setItem(storageKey, String(!checked));\n            }\n        }\n    }\n    /**\n     * スイッチをクリックしたときの処理\n     *\n     * @param {MouseEvent} ev - Event\n     */\n    _clickEvent(ev) {\n        this.dispatchEvent(new Event('change'));\n        ev.preventDefault();\n    }\n    /**\n     * スイッチにフォーカスした状態でキーボードが押された時の処理\n     *\n     * @param {KeyboardEvent} ev - Event\n     */\n    _keydownEvent(ev) {\n        switch (ev.key) {\n            case ' ':\n                this.dispatchEvent(new Event('change'));\n                ev.preventDefault();\n                break;\n        }\n    }\n}\n_myLocalStorage = new WeakMap(), _changeEventListener = new WeakMap(), _clickEventListener = new WeakMap(), _keydownEventListener = new WeakMap();\n"]}